"use client"

import { useState } from "react"
import {
  PhoneIcon,
  EnvelopeIcon,
  MapPinIcon,
  ClockIcon,
  ChatBubbleLeftEllipsisIcon,
  PaperAirplaneIcon,
  CheckCircleIcon,
  ChevronDownIcon,
  ChevronUpIcon,
  ExclamationTriangleIcon,
  HeartIcon,
  ShieldCheckIcon,
  AcademicCapIcon
} from "@heroicons/react/24/outline"

const contactInfo = [
  {
    icon: PhoneIcon,
    title: "ƒêi·ªán tho·∫°i",
    details: [
      { label: "T·ªïng ƒë√†i ch√≠nh", value: "024.1234.5678" },
      { label: "Kh·∫©n c·∫•p 24/7", value: "024.1234.5679" },
      { label: "T∆∞ v·∫•n s·ª©c kh·ªèe", value: "024.1234.5680" }
    ],
    textColor: "text-blue-600",
    bgColor: "bg-blue-50",
    borderColor: "border-blue-200"
  },
  {
    icon: EnvelopeIcon,
    title: "Email",
    details: [
      { label: "Email ch√≠nh", value: "info@school.edu.vn" },
      { label: "Kh·∫©n c·∫•p", value: "emergency@school.edu.vn" },
      { label: "H·ªó tr·ª£ k·ªπ thu·∫≠t", value: "support@school.edu.vn" }
    ],
    textColor: "text-green-600",
    bgColor: "bg-green-50",
    borderColor: "border-green-200"
  },
  {
    icon: MapPinIcon,
    title: "ƒê·ªãa ch·ªâ",
    details: [
      { label: "Tr∆∞·ªùng h·ªçc", value: "123 ƒê∆∞·ªùng ABC, Qu·∫≠n XYZ, TP.HCM" },
      { label: "Ph√≤ng y t·∫ø", value: "T·∫ßng 2, T√≤a nh√† ch√≠nh" },
      { label: "M√£ b∆∞u ƒëi·ªán", value: "700000" }
    ],
    textColor: "text-purple-600",
    bgColor: "bg-purple-50",
    borderColor: "border-purple-200"
  },
  {
    icon: ClockIcon,
    title: "Gi·ªù l√†m vi·ªác",
    details: [
      { label: "Th·ª© 2 - Th·ª© 6", value: "7:00 - 17:00" },
      { label: "Th·ª© 7", value: "8:00 - 12:00" },
      { label: "Kh·∫©n c·∫•p", value: "24/7" }
    ],
    textColor: "text-orange-600",
    bgColor: "bg-orange-50",
    borderColor: "border-orange-200"
  },
]

const departments = [
  {
    name: "Ph√≤ng y t·∫ø ch√≠nh",
    description: "Kh√°m b·ªánh, t∆∞ v·∫•n s·ª©c kh·ªèe, x·ª≠ l√Ω s·ª± c·ªë y t·∫ø",
    staff: "BS. Nguy·ªÖn Th·ªã Lan, Y t√° Tr·∫ßn VƒÉn Nam",
    phone: "024.1234.5678",
    email: "yte@school.edu.vn",
    icon: HeartIcon,
    color: "text-red-600",
    bgColor: "bg-red-50"
  },
  {
    name: "Ph√≤ng c·∫•p c·ª©u",
    description: "X·ª≠ l√Ω c√°c t√¨nh hu·ªëng kh·∫©n c·∫•p, tai n·∫°n",
    staff: "BS. L√™ Th·ªã Hoa, Y t√° Ph·∫°m VƒÉn Minh",
    phone: "024.1234.5679",
    email: "emergency@school.edu.vn",
    icon: ShieldCheckIcon,
    color: "text-blue-600",
    bgColor: "bg-blue-50"
  },
  {
    name: "Ph√≤ng t∆∞ v·∫•n dinh d∆∞·ª°ng",
    description: "T∆∞ v·∫•n ch·∫ø ƒë·ªô ƒÉn, dinh d∆∞·ª°ng h·ªçc ƒë∆∞·ªùng",
    staff: "TS. Ho√†ng Th·ªã Mai, Chuy√™n vi√™n dinh d∆∞·ª°ng",
    phone: "024.1234.5680",
    email: "dinhduong@school.edu.vn",
    icon: AcademicCapIcon,
    color: "text-green-600",
    bgColor: "bg-green-50"
  },
]

const faqs = [
  {
    question: "L√†m th·∫ø n√†o ƒë·ªÉ ƒëƒÉng k√Ω kh√°m s·ª©c kh·ªèe ƒë·ªãnh k·ª≥ cho con?",
    answer: "Ph·ª• huynh c√≥ th·ªÉ ƒëƒÉng k√Ω qua h·ªá th·ªëng online ho·∫∑c li√™n h·ªá tr·ª±c ti·∫øp v·ªõi ph√≤ng y t·∫ø. Ch√∫ng t√¥i s·∫Ω th√¥ng b√°o l·ªãch kh√°m c·ª• th·ªÉ qua email v√† tin nh·∫Øn.",
  },
  {
    question: "Tr∆∞·ªùng c√≥ nh·ªØng d·ªãch v·ª• y t·∫ø n√†o?",
    answer: "Ch√∫ng t√¥i cung c·∫•p: kh√°m s·ª©c kh·ªèe ƒë·ªãnh k·ª≥, x·ª≠ l√Ω s·ª± c·ªë y t·∫ø, t∆∞ v·∫•n dinh d∆∞·ª°ng, ti√™m ch·ªßng, theo d√µi s·ª©c kh·ªèe h·ªçc sinh c√≥ b·ªánh m√£n t√≠nh.",
  },
  {
    question: "Khi n√†o c·∫ßn li√™n h·ªá kh·∫©n c·∫•p?",
    answer: "Li√™n h·ªá ngay khi h·ªçc sinh g·∫∑p tai n·∫°n, b·ªã th∆∞∆°ng, s·ªët cao, kh√≥ th·ªü, ho·∫∑c b·∫•t k·ª≥ t√¨nh hu·ªëng n√†o c·∫ßn can thi·ªáp y t·∫ø ngay l·∫≠p t·ª©c.",
  },
  {
    question: "L√†m sao ƒë·ªÉ c·∫≠p nh·∫≠t th√¥ng tin s·ª©c kh·ªèe c·ªßa con?",
    answer: "Ph·ª• huynh c√≥ th·ªÉ c·∫≠p nh·∫≠t th√¥ng tin qua t√†i kho·∫£n c√° nh√¢n tr√™n h·ªá th·ªëng ho·∫∑c mang h·ªì s∆° y t·∫ø ƒë·∫øn ph√≤ng y t·∫ø ƒë·ªÉ c·∫≠p nh·∫≠t tr·ª±c ti·∫øp.",
  },
  {
    question: "Tr∆∞·ªùng c√≥ ch∆∞∆°ng tr√¨nh gi√°o d·ª•c s·ª©c kh·ªèe kh√¥ng?",
    answer: "C√≥, ch√∫ng t√¥i t·ªï ch·ª©c c√°c bu·ªïi t·∫≠p hu·∫•n v·ªÅ s·ª©c kh·ªèe, dinh d∆∞·ª°ng v√† an to√†n cho h·ªçc sinh v√† ph·ª• huynh ƒë·ªãnh k·ª≥ h√†ng th√°ng.",
  },
]

function ContactForm() {
  const [formData, setFormData] = useState({
    name: "",
    email: "",
    phone: "",
    subject: "",
    department: "",
    message: "",
    urgent: false,
  })
  const [isSubmitting, setIsSubmitting] = useState(false)
  const [isSubmitted, setIsSubmitted] = useState(false)
  const [expandedFaq, setExpandedFaq] = useState(null)

  const handleInputChange = (e) => {
    const { name, value, type, checked } = e.target
    setFormData(prev => ({
      ...prev,
      [name]: type === "checkbox" ? checked : value
    }))
  }

  const handleSubmit = async (e) => {
    e.preventDefault()
    setIsSubmitting(true)
    
    // Simulate API call
    await new Promise(resolve => setTimeout(resolve, 2000))
    
    setIsSubmitting(false)
    setIsSubmitted(true)
    
    // Reset form after 3 seconds
    setTimeout(() => {
      setIsSubmitted(false)
      setFormData({
        name: "",
        email: "",
        phone: "",
        subject: "",
        department: "",
        message: "",
        urgent: false,
      })
    }, 3000)
  }

  const toggleFaq = (index) => {
    setExpandedFaq(expandedFaq === index ? null : index)
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-indigo-50">
      {/* Hero Section */}
      <section className="bg-gradient-to-r from-blue-600 to-indigo-700 text-white py-20 relative overflow-hidden">
        <div className="absolute inset-0 bg-black/10"></div>
        <div className="absolute top-10 left-10 w-32 h-32 bg-white/10 rounded-full animate-pulse"></div>
        <div className="absolute bottom-10 right-10 w-24 h-24 bg-white/10 rounded-full animate-pulse animation-delay-1000"></div>
        
        <div className="max-w-7xl mx-auto px-4 text-center relative z-10">
          <div className="inline-flex items-center justify-center w-20 h-20 bg-white/20 backdrop-blur-sm rounded-2xl mb-6">
            <ChatBubbleLeftEllipsisIcon className="w-10 h-10 text-white" />
          </div>
          <h1 className="text-4xl md:text-6xl font-bold mb-6">Li√™n h·ªá v·ªõi ch√∫ng t√¥i</h1>
          <p className="text-xl md:text-2xl mb-8 max-w-3xl mx-auto opacity-90">
            Ch√∫ng t√¥i lu√¥n s·∫µn s√†ng h·ªó tr·ª£ v√† t∆∞ v·∫•n v·ªÅ s·ª©c kh·ªèe h·ªçc ƒë∆∞·ªùng cho con em b·∫°n
          </p>
          <div className="flex flex-wrap justify-center gap-4">
            <div className="bg-white/20 backdrop-blur-sm px-6 py-3 rounded-full border border-white/30">
              <span className="font-semibold">üìû Hotline: 024.1234.5678</span>
            </div>
            <div className="bg-white/20 backdrop-blur-sm px-6 py-3 rounded-full border border-white/30">
              <span className="font-semibold">üö® Kh·∫©n c·∫•p 24/7</span>
            </div>
          </div>
        </div>
      </section>

      {/* Contact Info Cards */}
      <section className="py-16 px-4 -mt-10 relative z-10">
        <div className="max-w-7xl mx-auto">
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
            {contactInfo.map((info, index) => (
              <div
                key={index}
                className={`${info.bgColor} ${info.borderColor} border-2 rounded-2xl p-6 shadow-lg hover:shadow-xl transition-all duration-300 transform hover:-translate-y-2`}
              >
                <div className={`inline-flex items-center justify-center w-14 h-14 ${info.textColor} bg-white rounded-xl mb-4 shadow-md`}>
                  <info.icon className="w-7 h-7" />
                </div>
                <h3 className={`text-xl font-bold ${info.textColor} mb-4`}>{info.title}</h3>
                <div className="space-y-2">
                  {info.details.map((detail, idx) => (
                    <div key={idx}>
                      <p className="text-sm text-gray-600 font-medium">{detail.label}:</p>
                      <p className="text-gray-800 font-semibold">{detail.value}</p>
                    </div>
                  ))}
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>

      {/* Main Content */}
      <section className="py-16 px-4">
        <div className="max-w-7xl mx-auto">
          <div className="grid grid-cols-1 lg:grid-cols-3 gap-12">
            {/* Contact Form */}
            <div className="lg:col-span-2">
              <div className="bg-white rounded-3xl shadow-xl p-8 border border-gray-100">
                <div className="mb-8">
                  <h2 className="text-3xl font-bold text-gray-800 mb-4">G·ª≠i tin nh·∫Øn</h2>
                  <p className="text-gray-600">ƒêi·ªÅn th√¥ng tin b√™n d∆∞·ªõi v√† ch√∫ng t√¥i s·∫Ω ph·∫£n h·ªìi s·ªõm nh·∫•t c√≥ th·ªÉ</p>
                </div>

                {isSubmitted && (
                  <div className="mb-6 p-4 bg-green-50 border border-green-200 rounded-xl flex items-center gap-3">
                    <CheckCircleIcon className="w-6 h-6 text-green-600" />
                    <div>
                      <p className="text-green-800 font-semibold">G·ª≠i th√†nh c√¥ng!</p>
                      <p className="text-green-600 text-sm">Ch√∫ng t√¥i s·∫Ω ph·∫£n h·ªìi trong v√≤ng 24 gi·ªù.</p>
                    </div>
                  </div>
                )}

                <form onSubmit={handleSubmit} className="space-y-6">
                  <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div>
                      <label className="block text-sm font-semibold text-gray-700 mb-2">
                        H·ªç v√† t√™n *
                      </label>
                      <input
                        type="text"
                        name="name"
                        value={formData.name}
                        onChange={handleInputChange}
                        required
                        className="w-full px-4 py-3 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 bg-gray-50 focus:bg-white"
                        placeholder="Nh·∫≠p h·ªç v√† t√™n"
                      />
                    </div>
                    <div>
                      <label className="block text-sm font-semibold text-gray-700 mb-2">
                        Email *
                      </label>
                      <input
                        type="email"
                        name="email"
                        value={formData.email}
                        onChange={handleInputChange}
                        required
                        className="w-full px-4 py-3 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 bg-gray-50 focus:bg-white"
                        placeholder="Nh·∫≠p email"
                      />
                    </div>
                  </div>

                  <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                    <div>
                      <label className="block text-sm font-semibold text-gray-700 mb-2">
                        S·ªë ƒëi·ªán tho·∫°i
                      </label>
                      <input
                        type="tel"
                        name="phone"
                        value={formData.phone}
                        onChange={handleInputChange}
                        className="w-full px-4 py-3 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 bg-gray-50 focus:bg-white"
                        placeholder="Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i"
                      />
                    </div>
                    <div>
                      <label className="block text-sm font-semibold text-gray-700 mb-2">
                        Ph√≤ng ban
                      </label>
                      <select
                        name="department"
                        value={formData.department}
                        onChange={handleInputChange}
                        className="w-full px-4 py-3 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 bg-gray-50 focus:bg-white"
                      >
                        <option value="">Ch·ªçn ph√≤ng ban</option>
                        <option value="medical">Ph√≤ng y t·∫ø ch√≠nh</option>
                        <option value="emergency">Ph√≤ng c·∫•p c·ª©u</option>
                        <option value="nutrition">Ph√≤ng t∆∞ v·∫•n dinh d∆∞·ª°ng</option>
                      </select>
                    </div>
                  </div>

                  <div>
                    <label className="block text-sm font-semibold text-gray-700 mb-2">
                      Ti√™u ƒë·ªÅ *
                    </label>
                    <input
                      type="text"
                      name="subject"
                      value={formData.subject}
                      onChange={handleInputChange}
                      required
                      className="w-full px-4 py-3 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 bg-gray-50 focus:bg-white"
                      placeholder="Nh·∫≠p ti√™u ƒë·ªÅ tin nh·∫Øn"
                    />
                  </div>

                  <div>
                    <label className="block text-sm font-semibold text-gray-700 mb-2">
                      N·ªôi dung *
                    </label>
                    <textarea
                      name="message"
                      value={formData.message}
                      onChange={handleInputChange}
                      required
                      rows={6}
                      className="w-full px-4 py-3 border border-gray-300 rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent transition-all duration-200 bg-gray-50 focus:bg-white resize-none"
                      placeholder="Nh·∫≠p n·ªôi dung tin nh·∫Øn..."
                    />
                  </div>

                  <div className="flex items-center">
                    <input
                      type="checkbox"
                      name="urgent"
                      checked={formData.urgent}
                      onChange={handleInputChange}
                      className="h-4 w-4 text-red-600 focus:ring-red-500 border-gray-300 rounded"
                    />
                    <label className="ml-2 text-sm text-gray-700 flex items-center gap-2">
                      <ExclamationTriangleIcon className="w-4 h-4 text-red-500" />
                      ƒê√¢y l√† v·∫•n ƒë·ªÅ kh·∫©n c·∫•p
                    </label>
                  </div>

                  <button
                    type="submit"
                    disabled={isSubmitting}
                    className="w-full bg-gradient-to-r from-blue-600 to-indigo-600 text-white py-4 px-6 rounded-xl hover:from-blue-700 hover:to-indigo-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-all duration-200 font-semibold shadow-lg hover:shadow-xl transform hover:-translate-y-0.5 disabled:opacity-50 disabled:cursor-not-allowed disabled:transform-none flex items-center justify-center gap-2"
                  >
                    {isSubmitting ? (
                      <>
                        <div className="animate-spin rounded-full h-5 w-5 border-2 border-white border-t-transparent"></div>
                        ƒêang g·ª≠i...
                      </>
                    ) : (
                      <>
                        <PaperAirplaneIcon className="w-5 h-5" />
                        G·ª≠i tin nh·∫Øn
                      </>
                    )}
                  </button>
                </form>
              </div>
            </div>

            {/* Sidebar */}
            <div className="space-y-8">
              {/* Departments */}
              <div className="bg-white rounded-3xl shadow-xl p-8 border border-gray-100">
                <h3 className="text-2xl font-bold text-gray-800 mb-6">C√°c ph√≤ng ban</h3>
                <div className="space-y-6">
                  {departments.map((dept, index) => (
                    <div key={index} className={`${dept.bgColor} rounded-2xl p-6 border border-gray-200`}>
                      <div className="flex items-start gap-4">
                        <div className={`${dept.color} bg-white rounded-xl p-3 shadow-md`}>
                          <dept.icon className="w-6 h-6" />
                        </div>
                        <div className="flex-1">
                          <h4 className="font-bold text-gray-800 mb-2">{dept.name}</h4>
                          <p className="text-sm text-gray-600 mb-3">{dept.description}</p>
                          <div className="space-y-1 text-sm">
                            <p><span className="font-medium">Nh√¢n vi√™n:</span> {dept.staff}</p>
                            <p><span className="font-medium">ƒêi·ªán tho·∫°i:</span> {dept.phone}</p>
                            <p><span className="font-medium">Email:</span> {dept.email}</p>
                          </div>
                        </div>
                      </div>
                    </div>
                  ))}
                </div>
              </div>

              {/* FAQ */}
              <div className="bg-white rounded-3xl shadow-xl p-8 border border-gray-100">
                <h3 className="text-2xl font-bold text-gray-800 mb-6">C√¢u h·ªèi th∆∞·ªùng g·∫∑p</h3>
                <div className="space-y-4">
                  {faqs.map((faq, index) => (
                    <div key={index} className="border border-gray-200 rounded-xl overflow-hidden">
                      <button
                        onClick={() => toggleFaq(index)}
                        className="w-full px-6 py-4 text-left bg-gray-50 hover:bg-gray-100 transition-colors duration-200 flex items-center justify-between"
                      >
                        <span className="font-semibold text-gray-800">{faq.question}</span>
                        {expandedFaq === index ? (
                          <ChevronUpIcon className="w-5 h-5 text-gray-500" />
                        ) : (
                          <ChevronDownIcon className="w-5 h-5 text-gray-500" />
                        )}
                      </button>
                      {expandedFaq === index && (
                        <div className="px-6 py-4 bg-white border-t border-gray-200">
                          <p className="text-gray-600 leading-relaxed">{faq.answer}</p>
                        </div>
                      )}
                    </div>
                  ))}
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* Emergency Contact */}
      <section className="py-16 px-4 bg-gradient-to-r from-red-600 to-pink-600 text-white">
        <div className="max-w-4xl mx-auto text-center">
          <div className="inline-flex items-center justify-center w-20 h-20 bg-white/20 backdrop-blur-sm rounded-2xl mb-6">
            <ExclamationTriangleIcon className="w-10 h-10 text-white" />
          </div>
          <h2 className="text-3xl md:text-4xl font-bold mb-4">Li√™n h·ªá kh·∫©n c·∫•p</h2>
          <p className="text-xl mb-8 opacity-90">
            Trong tr∆∞·ªùng h·ª£p kh·∫©n c·∫•p, vui l√≤ng li√™n h·ªá ngay v·ªõi ch√∫ng t√¥i
          </p>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-6 max-w-2xl mx-auto">
            <div className="bg-white/20 backdrop-blur-sm rounded-2xl p-6 border border-white/30">
              <PhoneIcon className="w-8 h-8 mx-auto mb-4" />
              <h3 className="font-bold text-lg mb-2">Hotline kh·∫©n c·∫•p</h3>
              <p className="text-2xl font-bold">024.1234.5679</p>
              <p className="text-sm opacity-80 mt-2">Ho·∫°t ƒë·ªông 24/7</p>
            </div>
            <div className="bg-white/20 backdrop-blur-sm rounded-2xl p-6 border border-white/30">
              <EnvelopeIcon className="w-8 h-8 mx-auto mb-4" />
              <h3 className="font-bold text-lg mb-2">Email kh·∫©n c·∫•p</h3>
              <p className="text-lg font-bold">emergency@school.edu.vn</p>
              <p className="text-sm opacity-80 mt-2">Ph·∫£n h·ªìi trong 15 ph√∫t</p>
            </div>
          </div>
        </div>
      </section>

      {/* Map Section */}
      <section className="py-16 px-4 bg-gray-100">
        <div className="max-w-7xl mx-auto">
          <div className="text-center mb-12">
            <h2 className="text-3xl md:text-4xl font-bold text-gray-800 mb-4">V·ªã tr√≠ tr∆∞·ªùng h·ªçc</h2>
            <p className="text-gray-600 text-lg">T√¨m ƒë∆∞·ªùng ƒë·∫øn tr∆∞·ªùng v√† ph√≤ng y t·∫ø</p>
          </div>
          <div className="bg-white rounded-3xl shadow-xl overflow-hidden">
            <div className="h-96 bg-gray-300 flex items-center justify-center">
              <div className="text-center">
                <MapPinIcon className="w-16 h-16 text-gray-500 mx-auto mb-4" />
                <p className="text-gray-600 font-medium">B·∫£n ƒë·ªì Google Maps s·∫Ω ƒë∆∞·ª£c t√≠ch h·ª£p t·∫°i ƒë√¢y</p>
                <p className="text-sm text-gray-500 mt-2">123 ƒê∆∞·ªùng ABC, Qu·∫≠n XYZ, TP.HCM</p>
              </div>
            </div>
          </div>
        </div>
      </section>
    </div>
  )
}

export default ContactForm