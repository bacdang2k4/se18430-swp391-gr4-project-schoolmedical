import React, { useEffect, useState } from "react";
import { getNurseVaccinationList, getNurseEventParticipants } from "../../api/axios";

function VaccinationForm() {
  const [events, setEvents] = useState([]);
  const [loadingEvents, setLoadingEvents] = useState(true);
  const [selectedEvent, setSelectedEvent] = useState(null);
  const [participants, setParticipants] = useState([]);
  const [loadingParticipants, setLoadingParticipants] = useState(false);
  const [search, setSearch] = useState("");
  const [showModal, setShowModal] = useState(false);
  const [detail, setDetail] = useState(null);

  // L·∫•y danh s√°ch s·ª± ki·ªán ti√™m ch·ªßng khi v√†o trang
  useEffect(() => {
    const fetchEvents = async () => {
      setLoadingEvents(true);
      try {
        const res = await getNurseVaccinationList();
        setEvents(res.result || []);
      } catch {
        setEvents([]);
      } finally {
        setLoadingEvents(false);
      }
    };
    fetchEvents();
  }, []);

  // Khi ch·ªçn s·ª± ki·ªán, l·∫•y danh s√°ch h·ªçc sinh tham gia
  const handleShowParticipants = async (event) => {
    setSelectedEvent(event);
    setLoadingParticipants(true);
    setParticipants([]);
    setSearch("");
    try {
      const res = await getNurseEventParticipants(event.id);
      setParticipants(res.result || []);
    } catch {
      setParticipants([]);
    } finally {
      setLoadingParticipants(false);
    }
  };

  // L·ªçc theo t√™n ho·∫∑c m√£ h·ªçc sinh
  const filteredList = participants.filter(item => {
    const name = ((item.student.lastName || "") + " " + (item.student.firstName || "")).toLowerCase();
    const studentId = (item.student.studentId || "").toLowerCase();
    const searchText = search.toLowerCase();
    return name.includes(searchText) || studentId.includes(searchText);
  });

  // Hi·ªÉn th·ªã modal chi ti·∫øt
  const handleShowDetail = (item) => {
    setDetail(item);
    setShowModal(true);
  };

  return (
    <div className="p-6">
      <div className="max-w-7xl mx-auto">
        {/* Header */}
        <div className="mb-8">
          <h1 className="text-3xl font-bold text-gray-900 flex items-center gap-3">
            üíâ Danh s√°ch s·ª± ki·ªán ti√™m ch·ªßng
          </h1>
          <p className="text-gray-600 mt-1">Ch·ªçn s·ª± ki·ªán ƒë·ªÉ xem danh s√°ch h·ªçc sinh tham gia</p>
        </div>

        {/* Danh s√°ch s·ª± ki·ªán */}
        <div className="bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden mb-8">
          <div className="overflow-x-auto">
            <table className="w-full">
              <thead className="bg-gray-50">
                <tr>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">STT</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">T√™n s·ª± ki·ªán</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Lo·∫°i</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Ng√†y t·ªï ch·ª©c</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">M√¥ t·∫£</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Tr·∫°ng th√°i</th>
                  <th className="px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">Xem danh s√°ch h·ªçc sinh</th>
                </tr>
              </thead>
              <tbody className="bg-white divide-y divide-gray-200">
                {loadingEvents ? (
                  <tr>
                    <td colSpan={7} className="text-center py-8 text-gray-500">ƒêang t·∫£i d·ªØ li·ªáu...</td>
                  </tr>
                ) : events.length === 0 ? (
                  <tr>
                    <td colSpan={7} className="text-center py-8 text-gray-500">Kh√¥ng c√≥ s·ª± ki·ªán ti√™m ch·ªßng</td>
                  </tr>
                ) : (
                  events.map((event, idx) => (
                    <tr key={event.id} className="hover:bg-gray-50">
                      <td className="px-6 py-4">{idx + 1}</td>
                      <td className="px-6 py-4">{event.name}</td>
                      <td className="px-6 py-4">{event.type}</td>
                      <td className="px-6 py-4">{event.eventDate}</td>
                      <td className="px-6 py-4">{event.description}</td>
                      <td className="px-6 py-4">{event.status}</td>
                      <td className="px-6 py-4 text-center">
                        <button
                          className="px-2 py-1 bg-blue-500 text-white rounded hover:bg-blue-600 text-xs"
                          onClick={() => handleShowParticipants(event)}
                        >
                          Xem danh s√°ch h·ªçc sinh
                        </button>
                      </td>
                    </tr>
                  ))
                )}
              </tbody>
            </table>
          </div>
        </div>

        {/* Danh s√°ch h·ªçc sinh tham gia s·ª± ki·ªán ƒë√£ ch·ªçn */}
        {selectedEvent && (
          <div className="bg-white rounded-xl shadow-sm border border-gray-200 overflow-hidden mb-8">
            <div className="p-4 font-semibold text-blue-700 text-lg">
              Danh s√°ch h·ªçc sinh tham gia s·ª± ki·ªán: {selectedEvent.name}
            </div>
            <div className="p-4">
              <input
                type="text"
                placeholder="T√¨m ki·∫øm theo t√™n ho·∫∑c m√£ h·ªçc sinh..."
                className="w-full mb-4 pl-4 pr-4 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent"
                value={search}
                onChange={e => setSearch(e.target.value)}
              />
              <div className="overflow-x-auto">
                <table className="w-full">
                  <thead className="bg-gray-50">
                    <tr>
                      <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">STT</th>
                      <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">M√£ h·ªçc sinh</th>
                      <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">T√™n h·ªçc sinh</th>
                      <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">L·ªõp</th>
                      <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Gi·ªõi t√≠nh</th>
                      <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Ng√†y sinh</th>
                      <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Tr·∫°ng th√°i ƒë·ªìng √Ω</th>
                      <th className="px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">Chi ti·∫øt</th>
                    </tr>
                  </thead>
                  <tbody className="bg-white divide-y divide-gray-200">
                    {loadingParticipants ? (
                      <tr>
                        <td colSpan={8} className="text-center py-8 text-gray-500">ƒêang t·∫£i d·ªØ li·ªáu...</td>
                      </tr>
                    ) : filteredList.length === 0 ? (
                      <tr>
                        <td colSpan={8} className="text-center py-8 text-gray-500">Kh√¥ng c√≥ h·ªçc sinh tham gia</td>
                      </tr>
                    ) : (
                      filteredList.map((item, idx) => (
                        <tr key={item.id} className="hover:bg-gray-50">
                          <td className="px-6 py-4">{idx + 1}</td>
                          <td className="px-6 py-4">{item.student.studentId || 'Kh√¥ng c√≥'}</td>
                          <td className="px-6 py-4">{`${item.student.lastName || ''} ${item.student.firstName || ''}`.trim() || 'Kh√¥ng c√≥'}</td>
                          <td className="px-6 py-4">{item.student.classes?.name || 'Kh√¥ng c√≥'}</td>
                          <td className="px-6 py-4">{item.student.gender === "MALE" ? "Nam" : item.student.gender === "FEMALE" ? "N·ªØ" : 'Kh√¥ng c√≥'}</td>
                          <td className="px-6 py-4">{item.student.dateOfBirth || 'Kh√¥ng c√≥'}</td>
                          <td className="px-6 py-4">{item.consent || 'Kh√¥ng c√≥'}</td>
                          <td className="px-6 py-4 text-center">
                            <button
                              className="px-2 py-1 bg-blue-500 text-white rounded hover:bg-blue-600 text-xs"
                              onClick={() => handleShowDetail(item)}
                            >
                              Xem chi ti·∫øt
                            </button>
                          </td>
                        </tr>
                      ))
                    )}
                  </tbody>
                </table>
              </div>
            </div>
          </div>
        )}

        {/* Modal chi ti·∫øt */}
        {showModal && detail && (
          <div className="fixed inset-0 flex items-center justify-center z-50" style={{backdropFilter: 'blur(3px)', background: 'rgba(0,0,0,0.2)'}}>
            <div className="bg-white rounded-xl shadow-lg p-6 w-full max-w-md relative">
              <button
                className="absolute top-2 right-2 text-gray-500 hover:text-gray-700 text-xl"
                onClick={() => setShowModal(false)}
              >
                √ó
              </button>
              <h2 className="text-lg font-bold mb-4">Chi ti·∫øt h·ªçc sinh tham gia ti√™m ch·ªßng</h2>
              <div className="space-y-2">
                <div><b>M√£ h·ªçc sinh:</b> {detail.student.studentId || 'Kh√¥ng c√≥'}</div>
                <div><b>H·ªç t√™n:</b> {`${detail.student.lastName || ''} ${detail.student.firstName || ''}`.trim() || 'Kh√¥ng c√≥'}</div>
                <div><b>L·ªõp:</b> {detail.student.classes?.name || 'Kh√¥ng c√≥'}</div>
                <div><b>Gi·ªõi t√≠nh:</b> {detail.student.gender === "MALE" ? "Nam" : detail.student.gender === "FEMALE" ? "N·ªØ" : 'Kh√¥ng c√≥'}</div>
                <div><b>Ng√†y sinh:</b> {detail.student.dateOfBirth || 'Kh√¥ng c√≥'}</div>
                <div><b>Tr·∫°ng th√°i ƒë·ªìng √Ω:</b> {detail.consent || 'Kh√¥ng c√≥'}</div>
                {/* Th√¥ng tin ph·ª• huynh */}
                <div><b>Ph·ª• huynh:</b> {detail.parent ? `${detail.parent.lastName || ''} ${detail.parent.firstName || ''}`.trim() : 'Kh√¥ng c√≥'}</div>
                <div><b>S·ªë ƒëi·ªán tho·∫°i:</b> {detail.parent?.phone || 'Kh√¥ng c√≥'}</div>
                <div><b>Email:</b> {detail.parent?.email || 'Kh√¥ng c√≥'}</div>
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  );
}

export default VaccinationForm;